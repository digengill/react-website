{"version":3,"sources":["images/cool-background.png","InfoCard.js","InfoCard2.js","images/covid-tracker-img.JPG","images/handwriting_img.jpg","Projects.js","Home.js","Footer.js","Contact.js","digengill_resume_april.pdf","Resume.js","Particles.js","App.js","serviceWorker.js","index.js"],"names":["InfoCard","title","image_src","body","github_link","live_link","Card","className","CardContent","CardMedia","image","Typography","variant","IconButton","component","Link","to","pathname","target","aria-label","Button","style","backgroundColor","color","startIcon","InfoCard2","Projects","project_info","name","image2","image3","project_info2","image1","map","project","Home","useState","open","setOpen","Container","maxWidth","maxHeight","minWidth","minHeight","onClick","Dialog","onClose","DialogTitle","id","DialogContent","DialogContentText","download","fontSize","Footer","Date","getFullYear","sty","Contact","setName","email","setEmail","subject","setSubject","setBody","useEffect","console","log","onSubmit","for","type","onChange","e","value","pdfjs","GlobalWorkerOptions","workerSrc","version","Resume","file","pdf","options","onLoadSuccess","document","querySelectorAll","forEach","layer","top","left","transform","renderTextLayer","pageNumber","Canvas","state","width","height","updateWindowDimensions","setState","window","innerWidth","innerHeight","outerWidth","this","addEventListener","removeEventListener","params","particles","number","density","enable","value_area","shape","stroke","src","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","enable_auto","distance","condensed_mode","rotateX","rotateY","move","direction","straight","out_mode","bounce","attract","interactivity","detect_on","events","onhover","onclick","resize","retina_detect","Component","App","Navbar","expand","Toggle","aria-controls","Collapse","Nav","path","exact","Particles","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f7b3ad8e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cool-background.11ccae7d.png\";","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport {Button,Card, CardContent, CardMedia, Typography, IconButton} from '@material-ui/core';\r\nimport './InfoCard.css';\r\nimport img from './images/cool-background.png';\r\nimport {Link, Redirect, Route} from 'react-router-dom';\r\n\r\n\r\nfunction InfoCard({title, image_src, body, github_link, live_link}) {\r\n\r\n    return (\r\n        <div>\r\n        <Card className=\"project__card\">\r\n            <CardContent className=\"card__div\">\r\n                <div className=\"card__left\">\r\n                <CardMedia className=\"card__image\" image={image_src}></CardMedia>\r\n                </div>\r\n                <div className=\"card__right\">\r\n                    <div className=\"card__info\">\r\n                        <Typography variant=\"h5\">{title}</Typography>   \r\n                        <Typography variant=\"subtitle1\">{body}</Typography>\r\n                    </div>\r\n                    <div className=\"card__links\">\r\n                        <IconButton className=\"github__btn\" component={Link} to={{ pathname: github_link }} target=\"_blank\" aria-label=\"github\">\r\n                            <GitHubIcon></GitHubIcon>\r\n                        </IconButton>\r\n                        <Button className=\"view__btn\" component={Link} to={{ pathname: live_link }} style={{backgroundColor: \"#21b6ae\"}}  target=\"_blank\" variant=\"contained\" \r\n                            color=\"default\"\r\n                            startIcon={<VisibilityIcon />}  >View    \r\n                            </Button> \r\n                            {/* component={Link} to={{ pathname: live_link }} */}\r\n                    </div>\r\n                </div>    \r\n            </CardContent>\r\n        </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InfoCard\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport {Button,Card, CardContent, CardMedia, Typography, IconButton} from '@material-ui/core';\r\nimport './InfoCard.css';\r\nimport img from './images/cool-background.png';\r\nimport {Link, Redirect, Route} from 'react-router-dom';\r\n\r\n\r\nfunction InfoCard2({title, image_src, body, github_link, live_link}) {\r\n\r\n    return (\r\n        <div>\r\n        <Card className=\"project__card\">\r\n            <CardContent className=\"card__div\">\r\n                <div className=\"card__left\">\r\n                <CardMedia className=\"card__image\" image={image_src}/>\r\n                </div>\r\n                <div className=\"card__right\">\r\n                    <div className=\"card__info\">\r\n                        <Typography variant=\"h5\">{title}</Typography>   \r\n                        <Typography variant=\"subtitle1\">{body}</Typography>\r\n                    </div>\r\n                    <div className=\"card__links\">\r\n                        <IconButton className=\"github__btn\" component={Link} to={{ pathname: github_link }} target=\"_blank\" aria-label=\"github\">\r\n                            <GitHubIcon></GitHubIcon>\r\n                        </IconButton>\r\n                        \r\n                            {/* component={Link} to={{ pathname: live_link }} */}\r\n                    </div>\r\n                </div>    \r\n            </CardContent>\r\n        </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InfoCard2\r\n","export default __webpack_public_path__ + \"static/media/covid-tracker-img.90b3c63c.JPG\";","export default __webpack_public_path__ + \"static/media/handwriting_img.59e8976c.jpg\";","import React from 'react'\r\nimport InfoCard from './InfoCard.js';\r\nimport InfoCard2 from './InfoCard2.js';\r\nimport image1 from './images/covid-tracker-img.JPG'\r\nimport image2 from './images/handwriting_img.jpg'\r\nimport image3 from './images/cool-background.png'\r\n\r\nimport './Projects.css';\r\n//rfce\r\n\r\n//Error: Cannot find module './images/covid-tracker-img.JPG'\r\n\r\n\r\n\r\nfunction Projects() {\r\n    const project_info = [\r\n         {\r\n            name : \"Handwriting Recognition\",\r\n            body : \"This project uses a Convolutional Recurrent Neural Network and trained with the CTC loss function to recognize words character-by-character. The network was built using the Keras API with Tensorflow 2.0 as the backend.\",\r\n            image_src : image2,\r\n            github_link : \"https://github.com/digengill/keras-ctc_loss-handwriting_recogintion\",\r\n            live_link : \"https://github.com/digengill/keras-ctc_loss-handwriting_recogintion\" ,\r\n    \r\n        },\r\n\r\n         {\r\n            name : \"OS-from-Scratch\",\r\n            body : \"An operating system written from scratch with x86 CPU registers. Working components include interrupts (IDT and IRQ's), paging, keyboard & screen drivers, and ports. Written in C and x86 assembly.\",\r\n            image_src : image3,\r\n            github_link : \"https://github.com/digengill/os-from-scratch\",\r\n            live_link : \"https://github.com/digengill/os-from-scratch\" ,\r\n            \r\n        },\r\n        {\r\n            name : \"TalkBox App\",\r\n            body : \"Worked in a small group to create a unique application which aids the user to communicate. The TalkBox application is a customizable application which allows you to play audio files. The software was programmed in Java and implemented on the Raspberry PI. The project comprised of Documentation, Testing, Issue Tracking, Debugging, and Refactoring.\",\r\n            image_src : image3,\r\n            github_link : \"https://github.com/digengill/2311Project\",\r\n            live_link : \"https://github.com/digengill/2311Project\" ,\r\n            \r\n        },\r\n        \r\n    ]\r\n    const project_info2 = {\r\n        name : \"Covid-19 Stats Tracker App\",\r\n        body : \"The Covid tracker is a webpage application which shows the latest statistics of Covid cases, recoveries, and deaths. With this app, you can visualize the data on the world map, and a line graph. The app is built with React, Javascript, and CSS. \",\r\n        image_src : image1,\r\n        github_link : \"https://github.com\",\r\n        live_link : \"https://covid-tracker-a309c.web.app/\" ,\r\n    }\r\n\r\n    return (\r\n        <div className=\"bg\">\r\n            <div className=\"container\">\r\n                <h1>Projects</h1>\r\n                    <InfoCard title={project_info2.name} image_src={project_info2.image_src} body={project_info2.body} github_link={project_info2.github_link} live_link={project_info2.live_link}></InfoCard>\r\n                    {project_info.map((project) =>  \r\n                    (\r\n                        <InfoCard2 title={project.name} image_src={project.image_src} body={project.body} github_link={project.github_link} live_link={project.live_link}></InfoCard2>\r\n                    )\r\n                    )} \r\n    \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Projects\r\n","import React, {useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport image1 from './images/cool-background.png';\r\nimport {Button, Typography, IconButton} from '@material-ui/core';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Container from '@material-ui/core/Container';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\n\r\n\r\nimport './Home.css';\r\nfunction Home() {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const to_Project = () => {\r\n        alert('project')\r\n        \r\n    }\r\n    const openDialog = () => {\r\n        setOpen(true);\r\n    }\r\n    const closeDialog = () => {\r\n        setOpen(false);\r\n    }\r\n    const styles = {\r\n\r\n        largeIcon: {\r\n          width: 200,\r\n          height: 60,\r\n        },\r\n      \r\n      };\r\n    return (\r\n\r\n        <div className=\"backg\">\r\n        \r\n            <Container className=\"home__container\">                \r\n                <div className=\"home__infobox\">\r\n                    <div className=\"home__infobox__info\">\r\n                        <Typography variant=\"h2\">Digen Gill</Typography>\r\n                        <Typography variant=\"h4\">Software Engineering Undergraduate</Typography>\r\n                    </div>\r\n                    <div className=\"home__buttons\">\r\n                        <div>\r\n                        <Button component={Link} to=\"/projects\" variant=\"contained\" style={{maxWidth: '100%', maxHeight: '100%', minWidth: '100%', minHeight: '5vh' ,backgroundColor: \"#21b6ae\"}}>Projects</Button>\r\n\r\n                        </div>\r\n                        <div>\r\n                        <Button onClick={() => {openDialog()}} variant=\"contained\" style={{maxWidth: '100%', maxHeight: '100%',minWidth: '100%', minHeight: '5vh', backgroundColor: \"#21b6ae\",}}>Resume</Button>\r\n                        <Dialog open={open} maxWidth={'xl'} onClose={() => closeDialog()} >\r\n                        <DialogTitle id=\"max-width-dialog-title\">Resume Options</DialogTitle>\r\n                            <DialogContent>\r\n                            <DialogContentText>\r\n                                Choose:\r\n                            </DialogContentText>\r\n                                <Button component={Link} to=\"/resume\" variant=\"contained\">View in browser</Button>\r\n                                <Button component={Link} to=\"/digengill_resume_april.pdf\" target=\"_blank\" download variant=\"contained\">Download</Button>\r\n                            </DialogContent>\r\n\r\n                        </Dialog>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"home__links\">\r\n                        <IconButton className=\"github__btn\" color='inherit'  component={Link} to={{ pathname: \"https://github.com/digengill\" }} target=\"_blank\" aria-label=\"github\" >\r\n                            <GitHubIcon fontSize=\"large\"></GitHubIcon>\r\n                        </IconButton>\r\n                        <IconButton className=\"linkedin_btn\" color='inherit'   component={Link} to={{ pathname: \"https://www.linkedin.com/in/digen-gill-929936164/\" }} target=\"_blank\" aria-label=\"linkedin\">\r\n                            <LinkedInIcon fontSize=\"large\"></LinkedInIcon>\r\n                        </IconButton>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </Container>            \r\n            \r\n        </div>\r\n            \r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport './Footer.css'\r\nimport Container from '@material-ui/core/Container';\r\n//className=\"col-sm\"\r\nfunction Footer() {\r\n    return (\r\n        <div className=\"footer__main\">\r\n                <p>\r\n                    &copy;{new Date().getFullYear()} \r\n                </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React, {useState, useEffect} from 'react'\r\nimport Particles from 'react-particles-js';\r\nimport './Contact.css';\r\n\r\n\r\nconst sty = {\r\n  color : {color:'black'}\r\n}\r\n\r\nexport default function Contact() {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [subject,setSubject ] = useState(\"\");\r\n  const [body, setBody] = useState(\"\");\r\n\r\n  const handleNameChange = e => {\r\n    setName(e.target.value);\r\n  }\r\n  const handleEmailChange = e => {\r\n    setEmail(e.target.value);\r\n  }\r\n  const handleSubjectChange = e => {\r\n    setSubject(e.target.value);\r\n  }\r\n  const handleBodyChange = e => {\r\n    setBody(e.target.value);\r\n  }\r\n  useEffect(() =>\r\n  {\r\n    console.log(name);\r\n    console.log(email);\r\n    console.log(subject);\r\n    console.log(body);\r\n\r\n  },[name, email, subject, body]);\r\n  \r\n  const submitEmail = () => {\r\n    setName(\"\");\r\n    setEmail(\"\");\r\n    setSubject(\"\");\r\n    setBody(\"\");\r\n    \r\n    \r\n  };\r\n  \r\n  \r\n  return (\r\n        <div className=\"contact__div\">     \r\n          <form className=\"_form\" onSubmit={submitEmail}>\r\n            <label for=\"name\" >Name:</label><br></br>\r\n            <input  type=\"text\" style={sty.color} onChange={handleNameChange}></input><br></br>\r\n            <label for=\"email\">Email:</label><br></br>\r\n            <input  type=\"email\" style={sty.color} onChange={handleEmailChange} ></input><br></br>\r\n            <label for=\"subject\">Subject:</label><br></br>\r\n            <input  type=\"text\" style={sty.color} onChange={handleSubjectChange}></input><br></br>\r\n            <label for=\"email\" >Body:</label><br></br>\r\n            <input  type=\"text\" style={sty.color} onChange={handleBodyChange} ></input><br></br>\r\n            <input type=\"submit\"></input>\r\n          </form>\r\n        </div> \r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/digengill_resume_april.ecfd482b.pdf\";","import React, {useState} from 'react'\r\nimport { Document, Page, pdfjs } from 'react-pdf';\r\nimport './Resume.css';\r\nimport pdf from './digengill_resume_april.pdf'\r\nimport 'react-pdf/dist/umd/Page/AnnotationLayer.css';\r\n\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\n\r\nfunction Resume() {\r\n  function removeTextLayerOffset() {\r\n    const textLayers = document.querySelectorAll(\".react-pdf__Page__textContent\");\r\n      textLayers.forEach(layer => {\r\n        const { style } = layer;\r\n        style.top = \"0\";\r\n        style.left = \"0\";\r\n        style.transform = \"\";\r\n    });\r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n        <div className=\"pdf__div\">\r\n        <Document\r\n            file={pdf}\r\n            options={{ workerSrc: \"/pdf.worker.js\" }}\r\n            onLoadSuccess={removeTextLayerOffset}\r\n        >\r\n            <Page  className=\"pdf__page\"  renderTextLayer=\"false\"  pageNumber={1} />\r\n        </Document>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Resume\r\n","import React, { Component } from \"react\";\r\nimport Particles from \"react-particles-js\";\r\n\r\nclass Canvas extends Component {\r\n  state = { width: \"0px\", height: \"0px\" };\r\n  componentDidMount() {\r\n    this.updateWindowDimensions();\r\n    window.addEventListener(\"resize\", this.updateWindowDimensions);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\r\n  }\r\n  updateWindowDimensions = () => {\r\n    this.setState({\r\n      width: `${window.innerWidth-100}px`,\r\n      height: `${window.innerHeight-100}px`\r\n    });\r\n    console.log(\"window.innerWidth=\",window.outerWidth)\r\n  };\r\n  render() {\r\n    const { width, height } = this.state;\r\n    console.log(width, height);\r\n    return (\r\n      <Particles\r\n        {...this.state}\r\n        params={{\r\n          particles: {\r\n            number: {\r\n              value: 30,\r\n              density: {\r\n                enable: true,\r\n                value_area: 800\r\n              }\r\n            },\r\n            color: {\r\n              value: \"#21b6ae\"\r\n            },\r\n            shape: {\r\n              type: \"circle\",\r\n              stroke: {\r\n                width: 0,\r\n                color: \"#21b6ae\"\r\n              },\r\n              image: {\r\n                src: \"img/github.svg\",\r\n                width: 100,\r\n                height: 100\r\n              }\r\n            },\r\n            opacity: {\r\n              value: 0.4,\r\n              random: true,\r\n              anim: {\r\n                enable: true,\r\n                speed: 1,\r\n                opacity_min: 0.1,\r\n                sync: false\r\n              }\r\n            },\r\n            size: {\r\n              value: 3,\r\n              random: true,\r\n              anim: {\r\n                enable: true,\r\n                speed: 2,\r\n                size_min: 0.1,\r\n                sync: false\r\n              }\r\n            },\r\n            line_linked: {\r\n              enable_auto: true,\r\n              distance: 100,\r\n              color: \"#21b6ae\",\r\n              opacity: 1,\r\n              width: 1,\r\n              condensed_mode: {\r\n                enable: false,\r\n                rotateX: 600,\r\n                rotateY: 600\r\n              }\r\n            },\r\n            move: {\r\n              enable: true,\r\n              speed: 1,\r\n              direction: \"none\",\r\n              random: false,\r\n              straight: false,\r\n              out_mode: \"out\",\r\n              bounce: false,\r\n              attract: {\r\n                enable: false,\r\n                rotateX: 600,\r\n                rotateY: 1200\r\n              }\r\n            }\r\n          },\r\n          interactivity: {\r\n            detect_on: \"canvas\",\r\n            events: {\r\n              onhover: {\r\n                enable: false\r\n              },\r\n              onclick: {\r\n                enable: false\r\n              },\r\n              resize: true\r\n            }\r\n          },\r\n          retina_detect: true\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Canvas;\r\n","import React from \"react\";\nimport {Navbar,NavDropdown,Nav} from 'react-bootstrap/';\nimport Projects from './Projects.js';\nimport {BrowserRouter as Router,Route, Link, Switch} from 'react-router-dom';\nimport {Typography} from '@material-ui/core';\n\nimport './App.css';\nimport Home from './Home.js';\nimport Footer from './Footer.js';\nimport Contact from './Contact.js';\nimport Resume from './Resume.js';\nimport ParticleComponent from './ParticleComponent.js';\nimport Particles from \"./Particles\";\n\n\n/* This is required only if the project file is located \ninside the app. Otherwise you can use the external link of the pdf file*/\n//sd\n//https://www.youtube.com/watch?v=d34GsFz-HkY   Parallax Design\n//https://www.youtube.com/watch?v=QfLI4BoXglA\n\n// HOver Effects https://www.youtube.com/watch?v=XZZ9DaG4ZvE\n// ** https://www.youtube.com/watch?v=ltxxNidblts\n//             <Navbar.Brand><Typography variant=\"h6\">GILL</Typography></Navbar.Brand>\n\n\nexport default function App() {\n  \n  \n  return (\n      <div className=\"page__container\">\n        Hello\n        <div className=\"particle__container\">\n        <Router>\n\n          <Navbar className=\"color-nav\" variant=\"dark\" expand=\"lg\">\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n              <Nav className=\"ml-auto\">\n                <Link className=\"nav-link\"  to=\"/\">Home</Link>\n                <Link className=\"nav-link\" to=\"/projects\">Projects</Link>\n                <Link className=\"nav-link\" to=\"/contact\">Contact</Link>\n                <Link className=\"nav-link\" to=\"/resume\">Resume</Link>\n              </Nav>\n            </Navbar.Collapse>\n          </Navbar>\n          <Switch>\n            <Route path='/' exact component={Home}></Route>\n            <Route path='/projects' component={Projects}></Route>\n            <Route path='/contact' component={Contact}></Route>\n            <Route path='/resume' component={Resume}></Route>\n          </Switch>\n          <div className=\"pc\">    \n          <Particles></Particles>\n          </div>\n        </Router>\n        </div>\n        <Footer className=\"page__footer\"></Footer>\n      </div>\n      \n\n    \n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}